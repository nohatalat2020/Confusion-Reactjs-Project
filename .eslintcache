[{"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\index.js":"1","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\App.js":"2","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\reportWebVitals.js":"3","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\dishes.js":"4","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\MenuComponent.js":"5","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\DishDetailComponent.js":"6","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\MainComponent.js":"7","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\HeaderComponent.js":"8","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\FooterComponent.js":"9","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\HomeComponent.js":"10","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\ContactComponent.js":"11","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\comments.js":"12","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\leaders.js":"13","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\promotions.js":"14","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\AboutusComponent.js":"15","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\configureStore.js":"16","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\dishes.js":"17","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\leaders.js":"18","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\comments.js":"19","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\promotions.js":"20","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\ActionTypes.js":"21","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\ActionCreators.js":"22","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\LoadingComponent.js":"23","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\forms.js":"24","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\baseUrl.js":"25"},{"size":639,"mtime":1612114834438,"results":"26","hashOfConfig":"27"},{"size":552,"mtime":1612728074040,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":1490,"mtime":1612551811403,"results":"30","hashOfConfig":"27"},{"size":2334,"mtime":1613770878807,"results":"31","hashOfConfig":"27"},{"size":7827,"mtime":1613833552655,"results":"32","hashOfConfig":"27"},{"size":4033,"mtime":1613858623014,"results":"33","hashOfConfig":"27"},{"size":4674,"mtime":1612639796785,"results":"34","hashOfConfig":"27"},{"size":2636,"mtime":1612535000016,"results":"35","hashOfConfig":"27"},{"size":2118,"mtime":1613853027772,"results":"36","hashOfConfig":"27"},{"size":9424,"mtime":1613858616342,"results":"37","hashOfConfig":"27"},{"size":4279,"mtime":1612551845757,"results":"38","hashOfConfig":"27"},{"size":2382,"mtime":1612551916405,"results":"39","hashOfConfig":"27"},{"size":445,"mtime":1612551876177,"results":"40","hashOfConfig":"27"},{"size":5070,"mtime":1613851653389,"results":"41","hashOfConfig":"27"},{"size":800,"mtime":1613511963003,"results":"42","hashOfConfig":"27"},{"size":598,"mtime":1613508357574,"results":"43","hashOfConfig":"27"},{"size":597,"mtime":1613848634306,"results":"44","hashOfConfig":"27"},{"size":539,"mtime":1613829401011,"results":"45","hashOfConfig":"27"},{"size":683,"mtime":1613770638140,"results":"46","hashOfConfig":"27"},{"size":562,"mtime":1613853280589,"results":"47","hashOfConfig":"27"},{"size":6258,"mtime":1613855554949,"results":"48","hashOfConfig":"27"},{"size":256,"mtime":1613508700898,"results":"49","hashOfConfig":"27"},{"size":170,"mtime":1613511749881,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1613770329734,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1xylwri",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\index.js",[],["107","108"],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\App.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\reportWebVitals.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\dishes.js",[],["109","110"],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\MenuComponent.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\DishDetailComponent.js",["111","112","113"],"import React,{Component}  from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle,BreadcrumbItem,Breadcrumb,Button,\r\n    Modal,ModalBody,ModalHeader,Label,Col,Row } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nexport class CommentForm extends Component {\r\n   constructor(props){\r\n       super(props);\r\n\r\n       this.state={\r\n         isModalOpen: false\r\n    };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n\r\n   }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n        handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, \r\n                values.author, values.comment);\r\n\r\n            }\r\n\r\n   render(){\r\n       return(\r\n           <div>\r\n            <Button color=\"secondary\" outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={12} htmlFor=\"rating\">Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={12} htmlFor=\"author\">Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\" \r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 3 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={12} htmlFor=\"comment\">Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\" \r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </div>\r\n       )\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   function RenderDish({dish}) {\r\n       return(\r\n        <div  className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </FadeTransform>\r\n        </div>\r\n       )\r\n        \r\n   }\r\nfunction RenderComments({comments,postComment, dishId}) {    \r\n          if(comments != null){\r\n              \r\n              const commentListItems = comments.map((comment)=>{\r\n\r\n                return(\r\n                    <Fade in>\r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>--{comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                    </Fade>\r\n                )\r\n              });\r\n\r\n\r\n            return(\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                    <h4> Comments:</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                        {commentListItems}\r\n                        </Stagger>\r\n                    </ul>\r\n                  <CommentForm dishId={dishId} postComment={postComment} />            \r\n                  </div>\r\n \r\n            )\r\n\r\n     } else{\r\n         return(\r\n             <div></div>\r\n         )\r\n     } \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const  DishDetail = (props) => {\r\n          if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null){\r\n           return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                      <BreadcrumbItem> <Link to =\"/menu\">Menu</Link></BreadcrumbItem>\r\n                      <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish}/>\r\n                    <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n      />\r\n                \r\n\r\n                </div>\r\n          </div>\r\n         );\r\n         }else{\r\n             return(<div></div>)\r\n         }\r\n        \r\n     }\r\n\r\n    \r\n \r\nexport default DishDetail;","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\MainComponent.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\HeaderComponent.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\FooterComponent.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\HomeComponent.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\ContactComponent.js",["114","115","116","117","118","119","120","121","122"],"import React ,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col,Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n   \r\n    handleSubmit(values) {\r\n    this.props.postFeedback(values.firstname, values.lastname, \r\n        values.telnum, values.email, values.agree, values.contactType, values.message);\r\n    this.props.resetFeedback();\r\n   \r\n  }\r\n    \r\n\r\n    \r\n    \r\n    render(){\r\n\r\n       return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n    <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n        </div>\r\n        <div className=\"col-12 col-md-9\">\r\n            <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                    <Col md={10}>\r\n                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                            placeholder=\"First Name\"\r\n                            className=\"form-control\"\r\n                             validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".firstname\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}\r\n                                />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                    <Col md={10}>\r\n                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                            placeholder=\"Last Name\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                />\r\n                         <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".lastname\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required',\r\n                                minLength: 'Must be greater than 2 characters',\r\n                                maxLength: 'Must be 15 characters or less'\r\n                            }}\r\n                            />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                    <Col md={10}>\r\n                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                            placeholder=\"Tel. Number\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                />\r\n\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".telnum\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required',\r\n                            minLength: 'Must be greater than 2 numbers',\r\n                            maxLength: 'Must be 15 numbers or less',\r\n                            isNumber: 'Must be a number'\r\n                        }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                    <Col md={10}>\r\n                        <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            className=\"form-control\" \r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                required, validEmail\r\n                            }}\r\n                            />\r\n                           <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".email\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required',\r\n                                validEmail: 'Invalid Email Address'\r\n                            }}\r\n                            /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Col md={{size: 6, offset: 2}}>\r\n                        <div className=\"form-check\">\r\n                            <Label check>\r\n                                <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                    className=\"form-check-input\"\r\n                                        /> {' '}\r\n                                    <strong>May we contact you?</strong>\r\n                            </Label>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={{size: 3, offset: 1}}>\r\n                        <Control.select model=\".contactType\" name=\"contactType\"\r\n                            className=\"form-control\">\r\n                            <option>Tel.</option>\r\n                            <option>Email</option>\r\n                        </Control.select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                    <Col md={10}>\r\n                        <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                            rows=\"12\"\r\n                            className=\"form-control\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Col md={{size:10, offset: 2}}>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                        Send Feedback\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n        </div>\r\n    );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\comments.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\leaders.js",[],["123","124"],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\promotions.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\AboutusComponent.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\configureStore.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\dishes.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\leaders.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\comments.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\promotions.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\ActionCreators.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\component\\LoadingComponent.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\redux\\forms.js",[],"D:\\web develop\\REACT JS\\coursera course\\weeks projects\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":51,"column":37,"nodeType":"133","endLine":51,"endColumn":108},{"ruleId":"131","severity":1,"message":"134","line":63,"column":37,"nodeType":"133","endLine":69,"endColumn":39},{"ruleId":"131","severity":1,"message":"135","line":82,"column":37,"nodeType":"133","endLine":85,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":65,"column":25,"nodeType":"133","endLine":65,"endColumn":67},{"ruleId":"131","severity":1,"message":"134","line":81,"column":25,"nodeType":"133","endLine":87,"endColumn":35},{"ruleId":"131","severity":1,"message":"134","line":103,"column":25,"nodeType":"133","endLine":109,"endColumn":35},{"ruleId":"131","severity":1,"message":"134","line":125,"column":25,"nodeType":"133","endLine":131,"endColumn":35},{"ruleId":"131","severity":1,"message":"134","line":149,"column":25,"nodeType":"133","endLine":156,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":152,"column":29,"nodeType":"140","endLine":152,"endColumn":53},{"ruleId":"131","severity":1,"message":"141","line":172,"column":33,"nodeType":"133","endLine":174,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":180,"column":25,"nodeType":"133","endLine":181,"endColumn":54},{"ruleId":"131","severity":1,"message":"135","line":190,"column":25,"nodeType":"133","endLine":192,"endColumn":56},{"ruleId":"125","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["144"],["145"],"no-global-assign","no-unsafe-negation"]